<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spacebeam (nonsense에 대한 포스트)</title><link>https://spacebeam.org/</link><description></description><atom:link href="https://spacebeam.org/ko/categories/nonsense.xml" rel="self" type="application/rss+xml"></atom:link><language>ko</language><copyright>Contents © 2022 &lt;a href="mailto:info@spacebeam.org"&gt;The Spacebeam Authors&lt;/a&gt; </copyright><lastBuildDate>Sat, 24 Dec 2022 19:05:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>It's a UNIX system!</title><link>https://spacebeam.org/ko/posts/its-a-unix-system/</link><dc:creator>The Spacebeam Authors</dc:creator><description>&lt;h2&gt;my system&lt;/h2&gt;
&lt;p&gt;I'm going to go through my customized dev environment and linux workflow (?),&lt;/p&gt;
&lt;p&gt;this is mostly for starcraft brood war ofc born of necessity. &lt;/p&gt;
&lt;p&gt;I use vim but I expect autocomplete and go to definitions and a tool that let me move throuth my projet easy and quick&lt;/p&gt;
&lt;p&gt;is a great text editor available everywhere that let me customize it to my own needs&lt;/p&gt;
&lt;p&gt;I'm by no means a vim expert, this is more like my notes in the continuous process of learning and making my own customized experience.&lt;/p&gt;
&lt;p&gt;vim window movements suck by default, I need good movements (explain what does this means).&lt;/p&gt;
&lt;p&gt;my goals are built-in language support for Python, Lua, Erlang and C &lt;/p&gt;
&lt;p&gt;avoid the requirement of tools outside those supported languages,&lt;/p&gt;
&lt;p&gt;avoid rust or go utilities if possible,&lt;/p&gt;
&lt;p&gt;avoid c++ if possible,&lt;/p&gt;
&lt;p&gt;introduce debian linux&lt;/p&gt;
&lt;p&gt;kek&lt;/p&gt;
&lt;p&gt;introduce the starcraft and vim comparation..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vim plugging manager&lt;/li&gt;
&lt;li&gt;my list of pluggins&lt;/li&gt;
&lt;li&gt;autocompletion&lt;/li&gt;
&lt;li&gt;unit tests&lt;/li&gt;
&lt;li&gt;git integration&lt;/li&gt;
&lt;li&gt;startify menu (?)&lt;/li&gt;
&lt;li&gt;go to definition&lt;/li&gt;
&lt;li&gt;linting (?)&lt;/li&gt;
&lt;li&gt;denite (more than just a fuzzy finder!)&lt;/li&gt;
&lt;li&gt;undotree F5&lt;/li&gt;
&lt;li&gt;dirvish (file finder)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hotkeys&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mksh&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;kitty&lt;/li&gt;
&lt;li&gt;bspwm&lt;/li&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;direction is more important than speed&lt;/p&gt;
&lt;h2&gt;plug&lt;/h2&gt;
&lt;p&gt;plug vim pluging manager&lt;/p&gt;
&lt;h3&gt;my list of pluggins&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;pluggin&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;vim-sensible&lt;/td&gt;
&lt;td&gt;a universal set of defaults that everyone can agree on.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-eunuch&lt;/td&gt;
&lt;td&gt;Vim sugar for the UNIX shell commands that need it the most.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-fugitive&lt;/td&gt;
&lt;td&gt;It's so awesome, it should be illegal.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-unimpaired&lt;/td&gt;
&lt;td&gt;Complementary pairs of mappings.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-repeat&lt;/td&gt;
&lt;td&gt;Repeat.vim remaps . in a way that plugins can tap into it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-dispatch&lt;/td&gt;
&lt;td&gt;Kick off builds and test suites using one of several asynchronous adapters.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-startify&lt;/td&gt;
&lt;td&gt;A fancy start screen for Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-signify&lt;/td&gt;
&lt;td&gt;Show differences with style&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-polyglot&lt;/td&gt;
&lt;td&gt;A solid language pack for Vim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-maximizer&lt;/td&gt;
&lt;td&gt;Maximizes and restores the current window in Vim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-bbye&lt;/td&gt;
&lt;td&gt;Close and remove the buffer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-lastplace&lt;/td&gt;
&lt;td&gt;Intelligently reopen files at your last edit position.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-sandwich&lt;/td&gt;
&lt;td&gt;add/delete/replace surroundings of a sandwiched textobject&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-highlightedyank&lt;/td&gt;
&lt;td&gt;Make the yanked region apparent!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;goyo&lt;/td&gt;
&lt;td&gt;Distraction-free writing in Vim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;limelight&lt;/td&gt;
&lt;td&gt;Hyperfocus-writing in Vim.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-peekaboo&lt;/td&gt;
&lt;td&gt;see the contents of the registers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-easy-align&lt;/td&gt;
&lt;td&gt;A simple, easy-to-use Vim alignment plugin.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gv.vim&lt;/td&gt;
&lt;td&gt;A git commit browser in Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-slash&lt;/td&gt;
&lt;td&gt;Enhancing in-buffer search experience&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vim-Jinja2-Syntax&lt;/td&gt;
&lt;td&gt;An up-to-date jinja2 syntax file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;denite&lt;/td&gt;
&lt;td&gt;Denite is a dark powered plugin to unite all interfaces.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-dirvish&lt;/td&gt;
&lt;td&gt;Directory viewer for Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-dirvish-git&lt;/td&gt;
&lt;td&gt;Plugin for dirvish.vim that shows git status flags&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-gtfo&lt;/td&gt;
&lt;td&gt;Go to Terminal or File manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-love-docs&lt;/td&gt;
&lt;td&gt;Vim plugin for LÖVE syntax highlighting and help file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-pandoc&lt;/td&gt;
&lt;td&gt;pandoc integration and utilities for vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-pandoc-syntax&lt;/td&gt;
&lt;td&gt;pandoc markdown syntax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;graphviz.vim&lt;/td&gt;
&lt;td&gt;graphviz .dot to .png flow chart image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-sxhkdrc&lt;/td&gt;
&lt;td&gt;Vim syntax for sxhkd's configuration files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jupytext.vim&lt;/td&gt;
&lt;td&gt;editing Jupyter ipynb files via jupytext&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tmux-complete.vim&lt;/td&gt;
&lt;td&gt;insert mode completion of words in adjacent tmux panes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-tmux-navigator&lt;/td&gt;
&lt;td&gt;Seamless navigation between tmux panes and vim splits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-table-mode&lt;/td&gt;
&lt;td&gt;VIM Table Mode for instant table creation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auto-pairs&lt;/td&gt;
&lt;td&gt;Vim plugin, insert or delete brackets, parens, quotes in pair&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;undotree&lt;/td&gt;
&lt;td&gt;The undo history visualizer for VIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onehalf&lt;/td&gt;
&lt;td&gt;one half dark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rainbow&lt;/td&gt;
&lt;td&gt;Rainbow Parentheses Improved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VimCompletesMe&lt;/td&gt;
&lt;td&gt;You don't Complete Me; Vim Completes Me!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deoplete&lt;/td&gt;
&lt;td&gt;Dark powered asynchronous completion framework for Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;neoinclude&lt;/td&gt;
&lt;td&gt;Include completion framework for deoplete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deoplete-clangx&lt;/td&gt;
&lt;td&gt;C/C++ Completion for deoplete using clang&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nvim-yarp&lt;/td&gt;
&lt;td&gt;Yet Another Remote Plugin Framework&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-hug-neovim-rpc&lt;/td&gt;
&lt;td&gt;Compatibility layer for neovim rpc client working on vim8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deoplete-vim-lsp&lt;/td&gt;
&lt;td&gt;deoplete source for vim-lsp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-cmake&lt;/td&gt;
&lt;td&gt;plugin for working with CMake projects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-gutentags&lt;/td&gt;
&lt;td&gt;A Vim plugin that manages your tag files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tagbar&lt;/td&gt;
&lt;td&gt;displays tags in a window, ordered by scope&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;async.vim&lt;/td&gt;
&lt;td&gt;normalize async job control api for vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-lsp&lt;/td&gt;
&lt;td&gt;async language server protocol plugin for vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ale&lt;/td&gt;
&lt;td&gt;Check syntax in Vim asynchronously and fix files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-lsp-ale&lt;/td&gt;
&lt;td&gt;Bridge between vim-lsp and ALE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;neoformat&lt;/td&gt;
&lt;td&gt;A vim plugin for formatting code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-devicons&lt;/td&gt;
&lt;td&gt;Adds file type icons to Vim plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lightline.vim&lt;/td&gt;
&lt;td&gt;A light and configurable statusline/tabline plugin for Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-cursorworld&lt;/td&gt;
&lt;td&gt;Underlines the word under the cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lightline-bufferline&lt;/td&gt;
&lt;td&gt;bufferline functionality for the lightline vim plugin.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lightline-ale&lt;/td&gt;
&lt;td&gt;ALE indicator for the lightline vim plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vimwiki&lt;/td&gt;
&lt;td&gt;Personal Wiki for Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calendar-vim&lt;/td&gt;
&lt;td&gt;Creates a calendar you can use within vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pomodoro.vim&lt;/td&gt;
&lt;td&gt;Bring the beauty of the Pomodoro technique to Vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Colorizer&lt;/td&gt;
&lt;td&gt;Color hex codes and color names&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indentLine&lt;/td&gt;
&lt;td&gt;display the indention levels with thin vertical lines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-test&lt;/td&gt;
&lt;td&gt;Run your tests at the speed of thought&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-isort&lt;/td&gt;
&lt;td&gt;sort python imports using isort&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-minimap&lt;/td&gt;
&lt;td&gt;A minimap for vim&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-lsp-settings&lt;/td&gt;
&lt;td&gt;Auto configurations for Language Server for vim-lsp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;custom preferences&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;plugin&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ale.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calendar.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;denite.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deoplete.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dirvish.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;goyo.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gutentags.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hotkets.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;indentLine.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jupytext.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ligthline.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lsp.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;neoformat.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pandoc.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;startify.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;test.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tmux.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vimwiki.vim&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;autocompletion&lt;/h2&gt;
&lt;p&gt;blabla bla&lt;/p&gt;
&lt;h2&gt;linting&lt;/h2&gt;
&lt;p&gt;ale.vim&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python support flake8 and pylint&lt;/li&gt;
&lt;li&gt;lua support luacheck&lt;/li&gt;
&lt;li&gt;c support by clang&lt;/li&gt;
&lt;li&gt;erlang support with syntaxerl&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;hotkeys&lt;/h2&gt;
&lt;p&gt;hotkeys.vim&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;hotkey&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;leader ]&lt;/td&gt;
&lt;td&gt;ale next wrap&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader [&lt;/td&gt;
&lt;td&gt;ale previous wrap&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader -&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader \&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader t&lt;/td&gt;
&lt;td&gt;bla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader tc&lt;/td&gt;
&lt;td&gt;color&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader s&lt;/td&gt;
&lt;td&gt;update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader z&lt;/td&gt;
&lt;td&gt;spelling&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader x&lt;/td&gt;
&lt;td&gt;buffer delete Bdelete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader e&lt;/td&gt;
&lt;td&gt;exit qa!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader d&lt;/td&gt;
&lt;td&gt;Denite buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader f&lt;/td&gt;
&lt;td&gt;DeniteProjectDir -start-filter grep:::!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader Backspace&lt;/td&gt;
&lt;td&gt;Denite -resume -cursor-pos=+1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader gy&lt;/td&gt;
&lt;td&gt;Goyo&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;leader R, replace&lt;/p&gt;
&lt;p&gt;leader gg, bla
leader gj, bla
leader gf, bla
leader ga, git fetch
leader gl, git pull
leader gc, git commit
leader gp, git push&lt;/p&gt;
&lt;p&gt;leader cg, CMakeGenerate
leader cb, CMakeBuild&lt;/p&gt;
&lt;p&gt;leader ct, CMakeBuild test&lt;/p&gt;
&lt;p&gt;leader tn, TestNearest&lt;/p&gt;
&lt;p&gt;leader tf, TestFile&lt;/p&gt;
&lt;p&gt;leader ts, TestSuite -strategy=vimterminal&lt;/p&gt;
&lt;p&gt;leader tl, TestLast&lt;/p&gt;
&lt;p&gt;I'm also have qe, j, k, qw, qq maped for quickfix stuff (?)&lt;/p&gt;
&lt;p&gt;leader qe,&lt;/p&gt;
&lt;p&gt;leader j,&lt;/p&gt;
&lt;p&gt;leader k,&lt;/p&gt;
&lt;p&gt;leader qw,&lt;/p&gt;
&lt;p&gt;leader qq&lt;/p&gt;
&lt;p&gt;now the F keys&lt;/p&gt;
&lt;p&gt;f1, help
f2, maximizer
f3, dirvish
f4, denite
f5, undotree
f5, date on insert mode
f7, calendar.vim
f8, pomodoro.vim&lt;/p&gt;</description><guid>https://spacebeam.org/ko/posts/its-a-unix-system/</guid><pubDate>Tue, 30 Aug 2022 17:34:34 GMT</pubDate></item><item><title>The Seed Mechanism</title><link>https://spacebeam.org/ko/posts/blackboard/</link><dc:creator>The Spacebeam Authors</dc:creator><description>&lt;p&gt;We are now ready to move up to a complete connection information distribution mechanism containing a number of programable modules along with the structure to program them.&lt;/p&gt;
&lt;p&gt;The seed mechanism consist of a central knowledge store, a set of programmable modules, and connections between them.&lt;/p&gt;
&lt;p&gt;The structure is set in a way that all of the connection information that is specific to recognition
of zergs is stored in the central knowledge store.&lt;/p&gt;
&lt;p&gt;Incoming lines from the programmable module allow information in each module to access the central knowledge,
and output lines from the central knowledge store to the programmable modules allow connection activation information
to be distributed back to the modules.&lt;/p&gt;
&lt;p&gt;The two programmable modules are &lt;em&gt;just copies&lt;/em&gt; of the module. It is assumed that lower-level mechanisms, outside
of the model itself, are responsible for aligning inputs with the two modules, so that shown two units are presented,
the zergling activates appropriate programmable zergling units in the module, and the hydralisk activates
appropriate programmable hydralisk units in the right module.&lt;/p&gt;
&lt;p&gt;In summary, the mechanism consists of &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(a) the programmable modules&lt;/li&gt;
&lt;li&gt;(b) the central knowledge store&lt;/li&gt;
&lt;li&gt;(c) converging inputs to the central knowledge store from the programmable modules&lt;/li&gt;
&lt;li&gt;(d) diverging outputs from the central knowledge store back to the programmable modules&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Benefits&lt;/h2&gt;
&lt;p&gt;Connection information distribution allow us to instruct parallel processing structures from outside the network
making their behavior contingent on instructions originating elsewhere in the network.&lt;/p&gt;
&lt;p&gt;This means, that the way a network responds to a particular input can be made contingent on the state of some other
network in the system, thereby greatly increasing the flexibility of parallel processing mechanisms.&lt;/p&gt;
&lt;p&gt;Perhaps the most general way of stating the benefit of connection information distribution is to note that is in a way,
analogous to the invention of the stored program!&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Using connection information distribution, we can create local copies of relevant portions of the contents of a central
knowledge store. These copies then serve as the basis for interactive processing amount the conceptual entities they
program local hardware units to represent.&lt;/p&gt;
&lt;p&gt;With this mechanism, parallel distributed processing models can now be said to be able to create multiple
&lt;em&gt;instances&lt;/em&gt; of the same &lt;em&gt;schema&lt;/em&gt;, bound appropriately to the correct local variables, though subject to just
the same kind of crashes and errors human programmers seem to make.&lt;/p&gt;
&lt;p&gt;We have not really done anything more than show how existing tools in the arsenal of parallel distributed processing
mechanisms can be used to create local copies of networks.&lt;/p&gt;</description><guid>https://spacebeam.org/ko/posts/blackboard/</guid><pubDate>Mon, 20 Apr 2020 14:04:36 GMT</pubDate></item><item><title>The education of the architect</title><link>https://spacebeam.org/ko/posts/architect/</link><dc:creator>The Spacebeam Authors</dc:creator><description>&lt;p&gt;The architect should be equipped with knowledge of many branches of study and varied kinds of learning, for it is by his judgement that all work done by the other arts is put to test.&lt;/p&gt;
&lt;p&gt;Knowledge is the child of practice and theory. Practice is the continuous and regular exercise of employment where manual work is done with any necessary material according to the design of a drawing. Theory, on the other hand, is the ability to demonstrate and explain the productions of dexterity on the principles of proportion.&lt;/p&gt;
&lt;p&gt;It follows, therefore, that architects who have aimed at acquiring manual skill without scholarship have never been able to reach a position of authority to correspond to their pains, while those who relied only upon theories and scholarship were obviously hunting the shadow, not the substance. But those who have a thorough knowledge of both, like men armed at all points, have the sooner attained their object and carried authority with them.&lt;/p&gt;
&lt;p&gt;In all matters, but particularly in architecture, there are these two points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the thing signified, &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and that which gives it its significance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That which is signified is the subject of which we may be speaking; and that which gives significance is a demonstrations on scientific principles.&lt;/p&gt;
&lt;p&gt;The reasons for all this are as follows. An architect must have a knowledge of drawing so that he can readily make sketches to show the appearance of the work which he proposes. Geometry, also, is of much assistance in architecture and in particular it teaches us the use of the rule and compasses, by which especially we acquire readiness in making plans for buildings in their grounds, and righly apply the square, the level, and the plummet. By means of optics, again, the light in buildings can be drawn from fixed quarters of the sky.&lt;/p&gt;
&lt;p&gt;It is true that by arithmetic that the total cost of buildings is calculated and measurements are computed, but difficult questions involving symmetry are solved by means of geometrical theories and methods.&lt;/p&gt;</description><guid>https://spacebeam.org/ko/posts/architect/</guid><pubDate>Wed, 23 Oct 2019 14:04:36 GMT</pubDate></item><item><title>Organizatinal behavior</title><link>https://spacebeam.org/ko/posts/behavior/</link><dc:creator>The Spacebeam Authors</dc:creator><description>&lt;p&gt;What is an organization? A monkey, a building, a drone: each is a concrete object and can be easily identified. One difficulty attending the study of organizations is that an organization is not as readily visible or describable.&lt;/p&gt;
&lt;p&gt;Exactly what is an organization? It is a building? A collection of machinery? A legal document containing a statement of incorporation? It is hardly likely to be any of these by itself. Rather, to describe an organization requires the consideration of a number of properties it possesses, thus gradually making clear, or at least clearer, that it is.&lt;/p&gt;
&lt;p&gt;The purposes of the organization, whether it is formal or informal, are accomplished by a collection of members whose efforts or behavior are so directed that they become coordinated and integrated in order to attain sub-goals and objectives.&lt;/p&gt;
&lt;h2&gt;Perception and behavior&lt;/h2&gt;
&lt;p&gt;All of us at some point or another have had the experience of watching another person do something or behave in a certain way, saying to ourselves, "She acts as if she thought, ... " and then filling in some supposition about the way the other person looked at things.&lt;/p&gt;
&lt;p&gt;Simple as the statement "She acts as if she thought ... " may be, it illustrates two important points.&lt;/p&gt;
&lt;p&gt;First, what the person thinks she sees may not actually exist. &lt;/p&gt;
&lt;p&gt;The second point is that people act on the basis of what they see. &lt;/p&gt;
&lt;p&gt;In understanding behavior, we must recognize that facts people do not perceive as meaningful usually will not influence their behavior, whereas the things they believe to be real, even though factually incorrect or nonexistent, will influence it.&lt;/p&gt;
&lt;p&gt;Organizations are intended to bring about integrated behavior. Similar, or at least compatible, perceptions on the part of organizational members are therefore a matter of prime consideration.&lt;/p&gt;</description><guid>https://spacebeam.org/ko/posts/behavior/</guid><pubDate>Sat, 19 Oct 2019 14:04:36 GMT</pubDate></item></channel></rss>